package solutionCodingStudio;
import java.util.* ;
import java.io.*; 
public class SecondLargestest {
	public static int findSecondLargest(int n, int[] arr) {
		//Optimal Solution With O(N) Time Complexity
		int largest=arr[0];
		int secLargest=-1;
		for(int i=0;i<n;i++){
			if(arr[i]>largest){
				secLargest=largest;
				largest=arr[i];
			}else if(arr[i]!=largest &&(secLargest==-1 || arr[i]>secLargest)){
				secLargest=arr[i];
			}
		}
		return secLargest;

		/* 
		//Brute Force Solution with O(NlogN) Time Complexity)
		Arrays.sort(arr);
		// for(int i=0;i<n;i++){
		// 	System.out.print(arr[i]+" ");
		// }
		// int largest=arr[n-1]
		int secLargest=arr[n-1];
		for(int i=n-1;i>0;i--){
			if(secLargest!=arr[i]){
				secLargest=arr[i];
				break;
			}
		}
		if(secLargest==arr[n-1]){
			return -1;
		}
		return secLargest;*/

		/* 
		//Better Solution With O(2N) Time Complexity
		int largest=arr[0];
		int secLargest=-1;
		for(int i=0;i<n;i++){
			if(arr[i]>largest){
				largest=arr[i];
			}
		}
		for(int i=0;i<n;i++){
			if(arr[i]!=largest && (secLargest==-1||secLargest<arr[i])){
				secLargest=arr[i];
				// System.out.print(secLargest+" ");
			}
		}
		// System.out.print(largest+" ");
		return secLargest;*/
		
	}
}

public class secondLargest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int arr[]=new int[n];
		for(int i=0;i<n;i++) {
			arr[i]=sc.nextInt();
		}
		SecondLargestest sol=new SecondLargestest();
		
		System.out.println(sol.findSecondLargest(n,arr));

	}

}
